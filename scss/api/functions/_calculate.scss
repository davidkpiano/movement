

@function _m-calculate-KeyframeEffect($effect) {
    $previous-effect: static-get('m-previous-effect' _get($effect, 'target'));
    $calculated-keyframes: ();

    $keyframes: _get($effect, 'frames');

    $index: 1;
    @while $index <= length($keyframes) {
        $previous-keyframe: if($index > 1,
            nth($calculated-keyframes, $index - 1),
            _last(_get($previous-effect, 'frames')));

        $keyframe: nth($keyframes, $index);

        $calculated-keyframe: _m-calculate-Keyframe($keyframe, $previous-keyframe);

        $calculated-keyframes: append($calculated-keyframes, $calculated-keyframe);

        $index: $index + 1;
    }

    $effect: _set($effect, 'frames', $calculated-keyframes);

    $_: static-set('m-previous-effect' _get($effect, 'target'), $effect);

    @return $effect;
}

@function _m-calculate-Keyframe($keyframe, $previous-keyframe) {
    $operator-map: (
        '+=': 1,
        '-=': -1,
        '\\+': 1,
        '\\-': -1,
        '\\=': 0
    );

    $declarations: _get($keyframe, 'declarations');

    $calculated-declarations: ();

    @each $property, $value in $declarations {
        @if _is-string($value) {
            $value-operator: false;

            @each $operator in _keys($operator-map) {
                @if _starts-with($value, $operator) {
                    $value-operator: $operator;
                }
            }

            $value: _parse-float(str-slice($value, str-length($value-operator) + 1));

            $previous-value: _get($previous-keyframe, 'declarations' $property);

            $calculated-value: $previous-value + ($value * _get($operator-map, $value-operator));

            $calculated-declarations: _set($calculated-declarations, $property, $calculated-value);
        }
    }

    $declarations: map-merge($declarations, $calculated-declarations);

    $keyframe: _m-set($keyframe, 'declarations', $declarations);

    @return $keyframe;
}