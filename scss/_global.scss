

$_movement: (
    current-node: false,
    nodes: ()
);

@function Timing(
    $duration: 2000ms,
    $delay: 0
) {
    $timing-duration: $duration;
    $timing-delay: $delay;

    @return (
        duration: $timing-duration,
        delay: $timing-delay
    );
}

@function Animation(
    $target,
    $name: $target,
    $timing: default
) {
    $animation-target: $target;
    $animation-name: if($name, $name, unique-id());
    $animation-timing: Timing($timing);
    $animation-nodes: (_type: nodes);

    @debug $animation-timing;

    @return (
        target: $animation-target,
        name: $animation-name,
        timing: $animation-timing,
        nodes: $animation-nodes
    );
}

@function czm-get($key) {
    $value: map-get($_movement, $key);

    @return $value;
}

@mixin czm-set($key, $value) {
    $_movement: map-merge($_movement, (#{$key}: $value)) !global;
}

@function czm-get-node($node-name: czm-get(current-node)) {
    $nodes: czm-get(nodes);
    $node: map-get($nodes, $node-name);

    @return $node;
}

@mixin czm-add-node($node) {
    $current-node: czm-get-node();

    $node-map: (map-get($node, name): $node);

    @if $current-node {
        $nodes: map-merge(map-get($current-node, nodes), $node-map);
        $current-node: map-merge($current-node, (nodes: $nodes));
    } @else {
        $nodes: map-merge(czm-get(nodes), $node-map);
        $current-node: $node;
    }

    $_movement: map-merge($_movement, (nodes: map-merge(map-get($_movement, nodes), $node-map))) !global;
}

@mixin animation(
    $target: &,
    $timing: default
) {
    $animation: Animation($target, $timing: $timing);
    @include czm-set(current-node, $animation);

    %temp { @content; }

    $total-keyframes: length($_animation-keyframes);
    $_keyframes-active: true !global;

    @keyframes czmkf1 {
        @content;
    }
}
