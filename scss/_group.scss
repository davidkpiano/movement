
@function AnimationGroup(
    $target,
    $timing: default
) {
    $group-id: unquote('g-#{unique-id()}');
    $group-target: $target;
    $group-name: $group-id;
    $group-timing: new(AnimationTiming, $timing);
    $group-children: ();
    $group-firstChild: null;
    $group-lastChild: null;
    $group-timeline: ();

    @return (
        id: $group-id,
        target: $group-target,
        timing: $group-timing,
        name: $group-name,
        children: $group-children,
        firstChild: $group-firstChild,
        lastChild: $group-lastChild,
        timeline: $group-timeline
    );
}

@mixin animation-group(
    $target: auto,
    $timing: default
) {
    $group: new(AnimationGroup, (
        target: $target,
        timing: $timing
    ), $extends: AnimationNode);

    @include mm-node-scope($group) {
        @include run { @content; }

        @each $child-node-id in mm-node-get(children) {
            @include mm-node-set(timeline, map-merge(mm-node-get(timeline), 
                ($child-node-id: 0)
            ));
        }

        $group: $_current-node;
    }
}