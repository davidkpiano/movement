
@function _m-iterate($effect) {
    $iterations: _get($effect, 'iterations');

    $calculated-effects: ();

    @each $child-effect in _get($effect, 'effects') {
        $iterated-effects: ();
        $child-effect-iterations: _get($child-effect, 'iterations');
        $child-effect: _m-set($child-effect, 'iterations', 1);

        @if $child-effect-iterations > 1 {        
            @for $index from 1 through $child-effect-iterations {
                $iterated-effects: append($iterated-effects, $child-effect);
            }

            $sequence-effect: m-sequence-effect(
                $target: _get($effect, 'target'),
                $effects: $iterated-effects);

            $sequence-effect: _m-timing($sequence-effect);

            $calculated-effects: append($calculated-effects, $sequence-effect);
        } @else {
            $calculated-effects: append($calculated-effects, $child-effect);
        }
    }

    $effect: _m-set($effect, 'effects', $calculated-effects);

    @return $effect;
}