@import 'api/module';

.foo, .bar {
  @include m-sequence() {
    @include m-keyframes((top: 10px) (top: 20px), $duration: 3s);
    @include m-to((top: 30px, left: 10px) (top: 40px), $duration: 2s);
    @include m-to((left: 20px) (top: -10px), $duration: 6s);
    @include m-to() {
      @include m-keyframe((top: 30px, left: 20px), $offset: 0s);
      @include m-keyframe((top: 20px, left: 30px), $offset: 3s);
      @include m-keyframe((top: 10px, left: 40px), $offset: 7s);
    }
  }
}

$KEYFRAMES: () !global;
$NODES: () !global;

@function traverse($effect: (effects: $STACK, offset: 0s)) {
  @if map-has-key($effect, 'effects') {
    $effects: _get($effect, 'effects');
    $offset: _get($effect, 'offset');

    $effects: _($effects,
      _map (_modify 'offset' (_add $offset)),
      _map _ary(traverse));
  } @else if map-has-key($effect, 'keyframes') {
    $keyframes: _get($effect, 'keyframes');
    $offset: _get($effect, 'offset');

    $keyframes: _($keyframes,
      _map (_modify 'offset' (_add $offset)),
      _map (_set 'target' _get($effect, 'target')));

    $KEYFRAMES: _concat($KEYFRAMES, $keyframes) !global;
  }

  @return $effect;
}

$_: traverse();

@each $keyframe in $KEYFRAMES {
  @each $selector in _get($keyframe, 'target') {
    @each $property, $value in _get($keyframe, 'declarations') {
      $node: MovementNode(
        $target: nth($selector, 1),
        $offset: _get($keyframe, 'offset'),
        $duration: null,
        $property: $property,
        $value: $value
      );

      $NODES: append($NODES, $node) !global;
    }
  }
}

@function m-split-target($node, $args...) {
  $selectors: _get($node, 'target'); // selector list
  $result: ();

  @each $selector in $selectors {
    $result: append($result, map-merge($node, ('target': $selector)));
  }

  @debug $result;

  @return $result;
}

$NODES: _($NODES,
  _map m-split-target,
  _flatten,
  _group-by 'target');

@debug map-get($NODES, '.foo');
