

@function _m-set-offset($effect, $mode: 'none') {
    $parent: _m-get-effect(_get($effect, 'parent'));
    $parent-offset-start: 0s;
    $parent-offset-end: 0s;

    @if $parent {    
        $parent-offset-start: _get($parent, 'options' 'offset-start');
        $parent-offset-end: _get($parent, 'options' 'offset-end');
    }

    $offset-start:
        _get($effect, 'options' 'offset-start')
        + _get($effect, 'options' 'delay')
        + $parent-offset-start;

    $offset-end:
        _get($effect, 'options' 'offset-end')
        + _get($effect, 'options' 'delay')
        + $parent-offset-end;

    $effect: _set($effect, 'options' 'offset-start', $offset-start);
    $effect: _set($effect, 'options' 'offset-end', $offset-end);

    @if _instance-of($effect, 'KeyframeEffect') {    
        @if $mode == 'none' {
            $effect: _set($effect, 'calculated' 'duration', _get($effect, 'options' 'duration'));
            $effect: _set($effect, 'calculated' 'delay', $offset-start);
        } @else if $mode == 'both' {
            $calculated-frames: ();

            $active-duration: _get($effect, 'options' 'duration');
            $total-duration: $active-duration + $offset-start + $offset-end;
            $relative-offset-start: percentage($offset-start / $total-duration);
            $relative-offset-end: 100% - percentage($offset-end / $total-duration);
            $relative-active-duration: percentage($active-duration / $total-duration);

            @each $keyframe in _get($effect, 'frames') {
                $offset: (_get($keyframe, 'offset') * $relative-active-duration) / 100% + $relative-offset-start;
                $keyframe: _set($keyframe, 'offset', $offset);

                $calculated-frames: append($calculated-frames, $keyframe);
            }

            $effect: _set($effect, 'frames', $calculated-frames);
        }
    }

    @return $effect;
}

@function _m-offset-sequence($effects, $duration) {
    $offset-effects: ();

    @if $duration == 'auto' {
        @if _any(_map($effects, 'options'), ('duration': 'auto')) {
            @warn 'Cannot have child effect with a duration of "auto" inside a parent effect with a duration of "auto"';

            @return ();
        }

        $duration: _sum(_map($effects, 'options'), 'duration');
    }

    $previous-duration: 0s;
    $remaining-duration: $duration;

    @each $effect in $effects {
        $duration: min(_get($effect, 'options' 'duration'), $remaining-duration);

        $remaining-duration: $remaining-duration - $duration;

        $effect: _set($effect, 'options' 'offset-start', $previous-duration);
        $effect: _set($effect, 'options' 'offset-end', $remaining-duration);
        $effect: _set($effect, 'options' 'duration', $duration);

        $previous-duration: $previous-duration + $duration;

        $offset-effects: append($offset-effects, $effect);
    }

    @return $offset-effects;
}